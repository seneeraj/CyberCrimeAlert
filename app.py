# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dlieeOEyCdgGnavJpgrYK4H5DmxuN-D6
"""

import streamlit as st
from utils.phishing_checker import check_link_safety
from utils.ai_chatbot import get_ai_response
from utils.risk_score import calculate_risk_score
from utils.db import log_event, get_all_alerts
import datetime

# ------------------ PAGE CONFIG ------------------ #
st.set_page_config(page_title="CyberGuardian AI", layout="wide")

# ------------------ HEADER ------------------ #
st.title("🛡️ CyberGuardian AI Dashboard")
st.markdown("Safeguard your digital life with real-time AI protection.")

# ------------------ SIDEBAR ------------------ #
st.sidebar.image("https://cdn-icons-png.flaticon.com/512/3064/3064197.png", width=100)
user_type = st.sidebar.selectbox("Select User Type:", ["Teen", "Parent", "Senior"], index=0)
st.sidebar.markdown(f"**Logged in as:** {user_type}")
current_time = datetime.datetime.now().strftime("%d %B %Y - %H:%M")
st.sidebar.markdown(f"**🕒 Time:** {current_time}")

# ------------------ DASHBOARD TABS ------------------ #
tabs = st.tabs(["🚨 Phishing Check", "🧠 AI Scam Advisor", "📊 Risk Score", "📚 Safety Tips", "🔍 Alert History"])

# ------------------ TAB 1: PHISHING CHECK ------------------ #
with tabs[0]:
    st.subheader("🔍 Check a Suspicious Link")
    url_input = st.text_input("Paste the URL you want to check:", "")
    if st.button("Scan Link"):
        result = check_link_safety(url_input)
        st.markdown(f"### 🛡️ Verdict: {result['verdict']}")
        st.markdown(f"**Reason:** {result['reason']}")
        if result['verdict'] == "⚠️ Suspicious":
            st.warning("Avoid clicking on this link. We've logged it for review.")
            log_event(user_type, "phishing", url_input, 75)  # Assuming 75 as high risk for phishing

# ------------------ TAB 2: AI CHAT ADVISOR ------------------ #
with tabs[1]:
    st.subheader("💬 Ask the AI if something is a scam")
    user_query = st.text_area("Enter a suspicious message, email, or text:", "")
    if st.button("Analyze Text"):
        response = get_ai_response(user_query)
        st.info(response)
        if "scam" in response.lower():
            log_event(user_type, "message", user_query, 80)  # Assuming 80 as high risk for scam messages

# ------------------ TAB 3: RISK SCORE ------------------ #
with tabs[2]:
    st.subheader("📊 Your Cyber Risk Overview")
    risk_score = calculate_risk_score(user_type)
    st.metric(label="Your Risk Score (0=Safe, 100=High Risk)", value=risk_score)
    if risk_score >= 70:
        st.error("🚨 High risk! Immediate action recommended.")
        log_event(user_type, "high_risk", "User risk score above threshold", risk_score)
    elif risk_score >= 40:
        st.warning("⚠️ Medium risk. Please review your activities.")
    else:
        st.success("✅ Low risk. Keep it up!")

# ------------------ TAB 4: SAFETY TIPS ------------------ #
with tabs[3]:
    st.subheader("📚 Digital Hygiene Tips")
    st.markdown("""
    - 🔐 Use strong, unique passwords for every account
    - 📩 Never click on suspicious links or unknown attachments
    - 🎥 Verify authenticity of video calls, especially with unfamiliar faces
    - 📞 Don’t trust unknown callers asking for urgent money
    - 🧠 Ask CyberGuardian if you feel unsure about a message
    """)

# ------------------ TAB 5: ALERT HISTORY ------------------ #
with tabs[4]:
    st.subheader("🔍 View All Past Alerts")
    alerts = get_all_alerts()
    if alerts:
        for alert in alerts:
            st.write(f"**User Type**: {alert[1]}")
            st.write(f"**Event Type**: {alert[2]}")
            st.write(f"**Details**: {alert[3]}")
            st.write(f"**Risk Score**: {alert[4]}")
            st.write(f"**Timestamp**: {alert[5]}")
            st.markdown("---")
    else:
        st.warning("No alerts logged yet.")